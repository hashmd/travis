{"version":3,"sources":["serviceWorker.js","store.js","ToDo.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initTodo","localStorage","getItem","JSON","parse","addTodo","createAction","removeTodo","toggleTodo","sort","a","b","done","todos","createReducer","_createReducer","Object","defineProperty","_ref","text","payload","push","_ref2","idx","splice","_ref3","store","configureStore","reducer","subscribe","setItem","stringify","getState","useStyles","makeStyles","theme","root","position","padding","spacing","grow","flexGrow","toolbar","mixins","connect","props","classes","_useState","useState","_useState2","slicedToArray","input","setInput","dispatch","react_default","createElement","Fragment","AppBar","Toolbar","Typography","variant","color","className","Input","type","placeholder","value","onChange","ev","target","IconButton","onClick","trim","SendRounded","Container","maxWidth","List","map","todo","i","key","ListItem","button","onContextMenu","preventDefault","ListItemAvatar","Avatar","CheckBoxRounded","CheckBoxOutlineBlankRounded","ListItemText","primary","Divider","responsiveFontSizes","createMuiTheme","palette","blue","typography","useNextVariants","App","es","ThemeProvider","CssBaseline","src_ToDo","ReactDOM","render","src_App","document","querySelector","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3ff3ea2a.chunk.js","sourcesContent":["// eslint-disable-file\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { configureStore, createReducer, createAction } from 'redux-starter-kit'\n\nconst initTodo = localStorage.getItem('todos')\n  ? JSON.parse(localStorage.getItem('todos'))\n  : []\n\nexport const addTodo = createAction('todos:add')\nexport const removeTodo = createAction('todos:remove')\nexport const toggleTodo = createAction('todos:toggle')\n\nconst sort = (a, b) => (a.done ? 1 : 0) - (b.done ? 1 : 0)\n\nconst todos = createReducer(initTodo, {\n  [addTodo]: (todos, { payload: text }) => {\n    todos.push({ text, done: false })\n    todos.sort(sort)\n  },\n  [removeTodo]: (todos, { payload: idx }) => {\n    todos.splice(idx, 1)\n  },\n  [toggleTodo]: (todos, { payload: idx }) => {\n    todos[idx].done = !todos[idx].done\n    todos.sort(sort)\n  }\n})\n\nconst store = configureStore({\n  reducer: { todos }\n})\n\nstore.subscribe(() => localStorage.setItem('todos', JSON.stringify(store.getState().todos)))\n\nexport default store\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/styles'\nimport {\n  CheckBoxRounded as DoneIcon,\n  CheckBoxOutlineBlankRounded as NotDoneIcon,\n  SendRounded as AddIcon\n} from '@material-ui/icons'\nimport {\n  AppBar,\n  Avatar,\n  Container,\n  Divider,\n  IconButton,\n  Input,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Toolbar,\n  Typography\n} from '@material-ui/core'\n\nimport {\n  addTodo,\n  removeTodo,\n  toggleTodo\n} from './store'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    padding: theme.spacing(0)\n  },\n  grow: {\n    flexGrow: 1\n  },\n  toolbar: theme.mixins.toolbar\n}))\n\nconst ToDo = props => {\n  const classes = useStyles()\n  const [ input, setInput ] = useState('')\n  const { todos, dispatch } = props\n\n  return <>\n    <AppBar position='fixed'>\n      <Toolbar>\n        <Typography variant='h6' color='inherit'>\n          Mis Tareas\n        </Typography>\n\n        <div className={classes.grow} />\n\n        <Input\n          type='text'\n          placeholder='Añade una tarea'\n          value={input}\n          onChange={ev => setInput(ev.target.value)}\n        />\n\n        <IconButton\n          onClick={ev => {\n            input.trim() && dispatch(addTodo(input))\n            setInput('')\n          }}\n        >\n          <AddIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n\n    <div className={classes.toolbar} />\n\n    <Container maxWidth='sm' className={classes.root}>\n      <List>\n        { todos.map((todo, i) => (\n          <div key={i}>\n            <ListItem button\n              onClick={ev => dispatch(toggleTodo(i))}\n              onContextMenu={ev => {\n                ev.preventDefault()\n                dispatch(removeTodo(i))\n              }}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  { todo.done ? <DoneIcon /> : <NotDoneIcon />}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={todo.text} />\n            </ListItem>\n            <Divider variant='inset' />\n          </div>\n        )) }\n      </List>\n    </Container>\n  </>\n}\n\nexport default connect(store => ({\n  todos: JSON.parse(JSON.stringify(store.todos))\n}))(ToDo)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { CssBaseline } from '@material-ui/core'\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport blue from '@material-ui/core/colors/blue'\nimport 'typeface-roboto'\n\nimport store from './store'\nimport ToDo from './ToDo'\n\nconst theme = responsiveFontSizes(createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: blue\n  },\n  typography: {\n    useNextVariants: true\n  }\n}))\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <ToDo />\n      </ThemeProvider>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\nserviceWorker.register()\n"],"sourceRoot":""}